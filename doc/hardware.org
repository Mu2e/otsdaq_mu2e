#------------------------------------------------------------------------------
# this section describes the hardware configuration
# of the Mu2e DAQ. at this point - just beginning
#------------------------------------------------------------------------------
* [[https://mu2e-docdb.fnal.gov/cgi-bin/sso/ShowDocument?docid=4097][mu2e-4097  :]] DTC user manual 
* [[https://mu2e-docdb.fnal.gov/cgi-bin/sso/ShowDocument?docid=19095][mu2e-19095]] : Mu2e beam timing
* [[https://mu2e-docdb.fnal.gov/cgi-bin/sso/RetrieveFile?docid=37376&filename=20220922_DAQNodes.pdf][mu2e-37376]] : DAQ node configuration in the DAQ room 
* DTCs       : two cards per node, mounted as /dev/mu2e0 and /dev/mu2e0      
#+begin_src 
mu2etrk@mu2edaq09:~/test_stand/pasha_005>ll -al /dev/mu2e
crw-rw-rw- 1 root root 244, 0 Mar 16 18:29 /dev/mu2e0
crw-rw-rw- 1 root root 244, 1 Mar 16 18:29 /dev/mu2e1
#+end_src
                                                              
- the card number is controled by the env var DTCLIB_DTC
  - if undefined, DTCLIB_DTC = 0
  - export DTCLIB_DTC=1 # use the /dev/mu2e1
* DTC registers of relevance                  
*      0x9004 : FPGA firmware date  
*      0x9010 : FPGA temperature                                             
       T(C) = (ADC code)*503.975/4096 - 273.15
*      0x9014 : FPGA VCCINT voltage                                          
       V(V) = (ADC code)/4095*3. , nominal : 1V
*      0x9018 : FPGA VCCAUX voltage                                          
       V(V) = (ADC code)/4095*3. , nominal : 1V
*      0x901C : FPGA VCCBRAM voltage                                         
       V(V) = (ADC code)/4095*3. , nominal : 1V       
*      0x9100 : DTC status                                                   
  - 0x40808404 : successfull 'mu2e_util  -q 5 -N -D 200 -n 3 test2'
*      0x9140 : SERDES lock status register                                  
|------+------+----------+-------------|
|  bit | Mode |  default | description |
|------+------+----------+-------------|
|    0 | ro   |        0 | ROC link 0  |
|    1 | ro   |        0 | ROC link 1  |
|    2 | ro   |        0 | ROC link 2  |
|    3 | ro   |        0 | ROC link 3  |
|    4 | ro   |        0 | ROC link 4  |
|    5 | ro   |        0 | ROC link 5  |
|    6 | ro   |        0 | CFO         |
|    7 | ro   |        0 | EVB         |
| 8-31 | ro   | 0x000000 | reserved    |
|------+------+----------+-------------|

- example: reading tracker DTC1 on mu2edaq09:
#+begin_quote 
mu2etrk@mu2edaq09:~/test_stand/pasha_015>my_cntl read 0x9140
0x00000011
sts=0
#+end_quote 
*      0x9158 : EVB configuration register                                   
|-------+------+---------+---------------------------------------|
|   bit | Mode | default | description                           |
|-------+------+---------+---------------------------------------|
| 00-06 | rw   |       0 | total number of destination EVB nodes |
|    07 | ro   |       0 | reserved                              |
| 08-14 | rw   |       0 | EVB start node                        |
|    15 | ro   |       0 | reserved                              |
| 16-22 | rw   |       0 | number of EVB input buffers           |
| 23-31 | ro   |       0 | reserved                              |
|-------+------+---------+---------------------------------------|
*      0x91a8 : CFO emulation heartbeat interval timer preset                

  time interval between two event window markers in units of 25ns
** example                                                                   
#+begin_src  
echo "Enabling EWM with 25.6 us internal"
my_cntl write 0x91a8 0x400
echo "0x91a8 set to "`my_cntl read 0x91a8`
#+end_src 
* TODO 0x91c4 :                                                              
  - at which point the value is changing ? - see below
|-------+------+----------+---------------------------------------------|
|  Bits | Mode | Defaults | Description                                 |
|-------+------+----------+---------------------------------------------|
| 31-16 | RO   |   0x0000 | Reserved                                    |
|  15-8 | RW   |     0x00 | Heartbeat packet Event Mode byte 5 contents |
|   7-0 | RW   |     0x00 | Heartbeat packet Event Mode byte 4 contents |
|-------+------+----------+---------------------------------------------|
  after tests, the register contains 0x000001ff:   
#+begin_src                                                                  
mu2etrk@mu2edaq09:~/test_stand/pasha_015>my_cntl read 0x91c4
0x000001ff
sts=0
#+end_src

  however upon initialization (Monicas's file:../../otsdaq_mu2e_tracker/scripts/chantsDataTestVst.sh )
  the register has 0xffff in it:

#+begin_src
mu2etrk@mu2edaq09:~/test_stand/pasha_015>my_cntl write 0x91c4 0xffffffff
sts=0
mu2etrk@mu2edaq09:~/test_stand/pasha_015>my_cntl read 0x91c4
0x0000ffff
sts=0
#+end_src 

* 0x91c8 : DebugPacketType                                                   
  why diabling it affects the rest ? 
  enable/disable debug mode in readout requests 
  bit 16: 0:disable, 1:enable 
  for buffer_test : 0x00000000
* ------------------------------------------------------------------------------
* tracker ROC registers 
* ------------------------------------------------------------------------------
* 0x0000 : 0x1234, if everything is OK                                       
  - if not, powercycle the ROC 
  - if that doesn't help, try resetting the DTC
* 0x0008 : "lane enable" register                                            
  after adding external clock and evmarker control to the ROC,
  one needs to write bit(8)=1 and bit(9)=1 on register 8, ie 0x300 (0r 768)
  0x300 + link enable 

  0x1: CAL lane 0
  0x2: CAL lane 1
  0x4: HV  lane 0
  0x8: HV  lane 1

  0xf: all four lanes enabled, 0x30f to be written
  
* 0x0014 : ROC reset register                                                
#+begin_src 
rocUtil write_register -a 14 -w 1 -l $LINK 
rocUtil simple_read    -a 14
0 0xeffe
#+end_src 

* ------------------------------------------------------------------------------
* back to [[file:otsdaq_mu2e.org][otsdaq_mu2e]]
* ------------------------------------------------------------------------------
